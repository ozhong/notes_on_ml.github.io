{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"","slug":"leetcode_98","date":"2021-06-17T04:54:12.336Z","updated":"2021-06-17T06:52:48.469Z","comments":true,"path":"2021/06/17/leetcode_98/","link":"","permalink":"http://example.com/2021/06/17/leetcode_98/","excerpt":"","text":"Leetcode 98 - Validate Binary Search Tree@[DFS|BST|Backtracking|Medium] ProblemCheck if a given binary tree is a valid BST.A valid BST is defined as All nodes in left subtree is smaller than root All nodes in right subtree is greater than root Solution Backtracking: Given a root node check if it’s a BST on left and right subtrees respectively. Note that we need to keep a copy of max and min of nodes’ ancestors for comparison. Time complexity: O(N) Space complexity: O(N) Codes - Python1234567891011121314151617class Solution: def isValidBST(self, root: TreeNode) -&gt; bool: # Note boundary conditions: -2**32 &lt;= Node.val &lt;= 2**31-1 vmin = - 2**32 vmax = 2**32 return self.validate(root, vmin, vmax) def validate(self, root, vmin, vmax): if root is None: return True elif root.val &lt;= vmin: return False elif root.val &gt;= vmax: return False else: # update min and max of ancestors and check if left and right subtrees are valid BST return self.validate(root.left, vmin, root.val) and self.validate(root.right, root.val, vmax)","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2021-06-09T04:08:22.459Z","updated":"2021-06-09T04:08:22.460Z","comments":true,"path":"2021/06/09/hello-world/","link":"","permalink":"http://example.com/2021/06/09/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}